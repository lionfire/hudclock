name: Build and Package

on:
  push:
    # branches: [ main ]  # Uncomment to also build on main branch pushes
    tags:
      - 'v*'
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.gitignore'
      - 'LICENSE'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version
      id: version
      run: |
        $version = (Get-Content VERSION -Raw).Trim()
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        echo "Building HudClock v$version"
      shell: pwsh
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Install Inno Setup
      run: |
        Write-Host "Downloading Inno Setup..."
        Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "innosetup-installer.exe"
        Write-Host "Installing Inno Setup..."
        Start-Process -FilePath "innosetup-installer.exe" -ArgumentList "/VERYSILENT", "/SUPPRESSMSGBOXES", "/NORESTART", "/SP-" -Wait
        Write-Host "Inno Setup installed"
      shell: pwsh
        
    - name: Restore dependencies
      run: dotnet restore src/wpf/MetricClock.csproj
      
    - name: Build
      run: dotnet build src/wpf/MetricClock.csproj --configuration Release --no-restore
      
    # Create different build outputs
    - name: Create Build Outputs
      run: |
        # Create output directories
        New-Item -ItemType Directory -Force -Path artifacts
        
        # 1. Framework-dependent single file
        Write-Host "Building framework-dependent single-file executable..."
        dotnet publish src/wpf/MetricClock.csproj `
          --configuration Release `
          --runtime win-x64 `
          --no-self-contained `
          --output artifacts/framework-dependent `
          -p:PublishSingleFile=true `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:DebugType=None `
          -p:DebugSymbols=false
          
        # 2. Self-contained single file
        Write-Host "Building self-contained single-file executable..."
        dotnet publish src/wpf/MetricClock.csproj `
          --configuration Release `
          --runtime win-x64 `
          --self-contained true `
          --output artifacts/self-contained `
          -p:PublishSingleFile=true `
          -p:PublishTrimmed=false `
          -p:IncludeNativeLibrariesForSelfExtract=true `
          -p:EnableCompressionInSingleFile=true
          
        # 3. Build for installer (framework-dependent, no single file)
        Write-Host "Building for installer..."
        dotnet publish src/wpf/MetricClock.csproj `
          --configuration Release `
          --runtime win-x64 `
          --no-self-contained `
          --output src/wpf/bin/Release/net8.0-windows/win-x64/publish `
          -p:DebugType=None `
          -p:DebugSymbols=false
          
        # Create installer
        Write-Host "Creating installer..."
        # Update version in installer script
        $version = (Get-Content VERSION -Raw).Trim()
        $issContent = Get-Content installer/setup.iss -Raw
        $issContent = $issContent -replace '#define MyAppVersion ".*"', "#define MyAppVersion `"$version`""
        Set-Content installer/setup.iss $issContent
        
        # Run Inno Setup
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer/setup.iss
        
        # Move installer to artifacts
        Move-Item -Path dist/*.exe -Destination artifacts/
        
        # Create zip files
        Write-Host "Creating archives..."
        # Rename framework-dependent to portable since it's a single file
        Compress-Archive -Path artifacts/framework-dependent/* -DestinationPath artifacts/HudClock-win-x64-portable.zip
        Compress-Archive -Path artifacts/self-contained/* -DestinationPath artifacts/HudClock-win-x64-self-contained.zip
        
        # Clean up directories, keep only zips and installer
        Remove-Item -Recurse -Force artifacts/framework-dependent
        Remove-Item -Recurse -Force artifacts/self-contained
        
    # Upload artifacts separately for VirusTotal size limits
    - name: Upload Portable Build
      uses: actions/upload-artifact@v4
      with:
        name: hudclock-portable
        path: artifacts/HudClock-win-x64-portable.zip
        
    - name: Upload Self-Contained Build (Large)
      uses: actions/upload-artifact@v4
      with:
        name: hudclock-self-contained
        path: artifacts/HudClock-win-x64-self-contained.zip
        
    - name: Upload Installer
      uses: actions/upload-artifact@v4
      with:
        name: hudclock-installer
        path: artifacts/HudClock-*-Setup.exe
        
  virustotal-scan:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    continue-on-error: true  # Don't fail the workflow if scanning fails
    
    steps:
    - name: Download Portable artifact
      uses: actions/download-artifact@v4
      with:
        name: hudclock-portable
        path: scan-artifacts
        
    - name: VirusTotal Scan
      uses: crazy-max/ghaction-virustotal@v4
      id: virustotal
      with:
        vt_api_key: ${{ secrets.VT_API_KEY }}
        files: |
          scan-artifacts/*.zip
        
    - name: Generate scan results
      if: steps.virustotal.outputs.analysis != ''
      run: |
        echo "## VirusTotal Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Portable build: [View scan](https://www.virustotal.com/gui/file-analysis/${{ fromJSON(steps.virustotal.outputs.analysis).HudClock-win-x64-portable.zip.id }})" >> $GITHUB_STEP_SUMMARY
        
    - name: Comment on Release (if created)
      if: steps.virustotal.outputs.analysis != ''
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Wait for release to be created
        sleep 30
        # Add VirusTotal info to release
        gh release edit "${{ github.ref_name }}" \
          --notes-file - <<EOF
        $(gh release view "${{ github.ref_name }}" --json body -q .body)
        
        ## 🛡️ Security Scans
        - Portable build: [VirusTotal scan](https://www.virustotal.com/gui/file-analysis/${{ fromJSON(steps.virustotal.outputs.analysis).HudClock-win-x64-portable.zip.id }})
        
        *Note: Self-contained build exceeds VirusTotal's free API size limit (32MB)*
        EOF
  
  release:
    needs: [build, virustotal-scan]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Prepare release files
      run: |
        # Move all zip files and installer to a single directory
        mkdir -p release-files
        find artifacts -name "*.zip" -exec mv {} release-files/ \;
        find artifacts -name "*.exe" -exec mv {} release-files/ \;
        ls -la release-files/
        
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${{ github.ref_name }}" \
          --title "HudClock ${{ github.ref_name }}" \
          --notes "## Download Options
        
        ### 🚀 Recommended: Windows Installer
        **HudClock-${{ github.ref_name }}-Setup.exe** - Easy Windows installer with Start Menu shortcuts and uninstaller. Requires .NET 8 Desktop Runtime.
        
        ### 💾 Self-Contained Version
        **HudClock-win-x64-self-contained.zip** - Single executable file that includes everything needed to run. No installation or .NET runtime required. Just download, extract, and run!
        
        ### 📦 Other Options
        - **HudClock-win-x64-portable.zip** - Portable single executable (requires .NET 8 Desktop Runtime)
        
        ## System Requirements
        - Windows 10 or later (64-bit)
        - .NET 8 Desktop Runtime (only for installer and portable versions)
        
        ## Installation
        1. Download your preferred version
        2. Extract the ZIP file to any location
        3. Run \`HudClock.exe\`
        4. (Optional) Create a shortcut for easy access
        
        ## What's New
        See [commits](https://github.com/lionfire/hudclock/commits/${{ github.ref_name }}) for details." \
          release-files/*